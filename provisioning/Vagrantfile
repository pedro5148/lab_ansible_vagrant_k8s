# -*- mode: ruby -*-
# vi: set ft=ruby  :

machines = {
  "mr-robot" => {"memory" => "2048", "cpu" => "2", "ip" => "20", "image" => "ubuntu/jammy64"},
  "elliot" => {"memory" => "2048", "cpu" => "2", "ip" => "21", "image" => "ubuntu/jammy64"},
  "darlene" => {"memory" => "2048", "cpu" => "2", "ip" => "22", "image" => "ubuntu/jammy64"}, 
}

$REDE=`ip r | awk '/^default/ {printf "%s", $3; exit 0}' | cut -d '.' -f 1-3 | awk '{printf "%s.", $0}'`
$NIC=`ip r | awk '/^default/ {printf "%s", $5; exit 0}'`
$DEFAULT_GW=`ip r | awk '/^default/ {printf "%s", $3; exit 0}'`

Vagrant.configure("2") do |config|
  config.vm.box_check_update = false
  if Vagrant.has_plugin?("vagrant-timezone") || Vagrant.has_plugin?("vagrant-vbguest")
      config.timezone.value = "America/Sao_Paulo"
      config.vbguest.auto_update = false
  else
      puts "As extensões 'vagrant-timezone' e 'vagrant-vbguest' não estão instaladas."
  end
      
  config.ssh.insert_key = false

  machines.each do |name, conf|
    config.vm.define "#{name}" do |machine| 
      machine.vm.box = "#{conf["image"]}"
      machine.vm.hostname = "#{name}"
      machine.vm.network "public_network", bridge: "#$NIC", ip: "#$REDE""#{conf["ip"]}"

      machine.vm.provider "virtualbox" do |vb|
        vb.name = "#{name}"
        vb.memory = conf["memory"]
        vb.cpus = conf["cpu"]
        vb.customize ["modifyvm", :id, "--groups", "/Lab_Teste"]
      end
      
      #machine.vm.synced_folder ".", "/cluster", owner: "vagrant", group: "vagrant", mount_options: ["dmode=755","fmode=644"]
    end
  end
  config.vm.provision "shell",
    run: "always",
    inline: "ip route add default via #$DEFAULT_GW"
 
  config.vm.provision "file",
    source: "#{ENV['HOME']}/.ssh/id_ed25519.pub",
    destination: "/home/vagrant/.ssh/authorized_keys2"
 
  config.vm.provision "shell", inline: <<-SHELL
    sudo cp /home/vagrant/.ssh/authorized_keys2 /root/.ssh/ 
  SHELL
 end

host_update_script = <<-SCRIPT
  #!/bin/bash
  #echo "Atualizando /etc/hosts e o arquivo de inventário do Ansible..."
  {
SCRIPT

inventario = "#{ENV['PWD']}/hosts"

machines.each do |name, conf|
  ip = "#{$REDE}#{conf["ip"]}"
  host_entry = "#{ip}\t#{name}"
  host_update_script += <<-ENTRY
    if ! egrep -q "#{ip}.*#{name}" /etc/hosts; then
      echo "#{host_entry}" | sudo tee -a /etc/hosts
    else
      echo "Entrada #{host_entry} já existe no /etc/hosts"
    fi

    if ! grep -q "#{ip}" #{inventario}; then
      echo "#{ip}" | tee -a #{inventario}
      echo "\n"
    else
      echo "Entrada #{ip} já existe no #{inventario}"
    fi
  ENTRY
end

host_update_script += <<-SCRIPT
  } > /dev/null
SCRIPT

File.write('/tmp/update_hosts.sh', host_update_script)
system('bash /tmp/update_hosts.sh')